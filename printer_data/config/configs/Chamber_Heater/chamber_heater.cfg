[mcu CH]
serial: /dev/serial/by-id/usb-Klipper_rp2040_303339383406B44A-if00

[temperature_sensor CH_NHK]
sensor_type: temperature_mcu
sensor_mcu: CH
min_temp: 0
max_temp: 100

[output_pin Chamber_Lights] #white leds
pin: CH:gpio9
pwm: True
value: 1.0
shutdown_value: 0
cycle_time: 0.01

[neopixel chamber_leds]
pin: CH:gpio7
chain_count: 5
#Chamber Heater LED: (1)
#Canopy LEDS: (2-5)
color_order: GRBW
initial_RED: 0.5
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0

[gcode_macro M141]
gcode:
   SET_HEATER_TEMPERATURE HEATER=Heater_Chamber TARGET={params.S}
   RESPOND TYPE=command MSG='Heating Chamber'
   
[gcode_macro M191]
gcode:
   SET_HEATER_TEMPERATURE HEATER=Heater_Chamber TARGET={params.S}
   TEMPERATURE_WAIT SENSOR="heater_generic heater_chamber" MINIMUM={params.S}
   RESPOND TYPE=command MSG='Heating Chamber'
    
[heater_generic Heater_Chamber]
gcode_id: CH
heater_pin: CH:gpio16
sensor_type: Generic 3950
sensor_pin: CH:gpio29
control: pid
pid_Kp=35 
pid_Ki=1 
pid_Kd=350
max_power: .8
min_temp: 0
max_temp: 70

[verify_heater Heater_Chamber]
max_error: 120
check_gain_time: 120
hysteresis: 50
heating_gain: 1

[heater_fan Chamber_Heater_Fan]
pin: CH:gpio6
max_power: 1.0
shutdown_speed: 1
kick_start_time: 0.5
heater: Heater_Chamber
heater_temp: 40 # fan will turn off below this level

############################
# Chamber Heater LED Effects
############################

[led_effect chamber_heater_on]
autostart: false
frame_rate: 24
leds:
    neopixel:chamber_leds (1)
layers:
      breathing  3 1 top (1,0,0,0)     

[led_effect chamber_heater_off]
autostart: false
frame_rate: 24
leds:
    neopixel:chamber_leds (1)
layers:
      static     0 0 top (0,1,0,0)
      
[gcode_macro _chamber_heater_on]
gcode:
     SET_LED_EFFECT EFFECT=chamber_heater_on

[gcode_macro _chamber_heater_off]
gcode:
     SET_LED_EFFECT EFFECT=chamber_heater_off     
     
############################
# Macros
############################

#[gcode_macro M191]  #This command optionally sets a new target chamber temperature
#and waits for the target temperature to be reached before proceeding.
#If the temperature is set with S then it waits only when heating.
#gcode:
#  {% set target_chamber = params.CHAMBER_TEMP |default("35")|int %}           # Get target chamber temp from gcode
#  {% set current_temp = current_chamber_temp|default("20")|int %}            # Get current chamber temp from thermistor
#  {action_respond_info('Target chamber temp set to %.1fC.' % (target_chamber))}
#  {% if target_chamber < current_temp %}                                        # Judging the actual chamber temperature
#      {action_respond_info('Chamber temp low %.1fC. Start heating' % (target_chamber))}
#      M117 Chamber Heating...
#      TEMPERATURE_WAIT SENSOR="heater_generic Heater_Chamber" MINIMUM={target_chamber} 
#  {% endif %}    
#  {% if target_chamber >= current_temp %}                                       # Judging the actual chamber temperature
#      {action_respond_info('Chamber temp high %.1fC. Start venting' % (target_chamber))} 
#      M117 Chamber Venting...
#      SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" MIMIMUM=target={target_chamber}
#      SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={target_chamber}
#  {% endif %}

[gcode_macro M191]  # M191 - Wait for Chamber Temperature
#rename_existing: M99191
gcode:
#    {% set s = params.S|float %}
#    {% if s == 0 %}
        # If target temperature is 0, do nothing
#        M117 Chamber heating cancelled
#    {% else %}
        # M140 S100
#        SET_HEATER_TEMPERATURE HEATER=Heater_Chamber TARGET={s}
#        TEMPERATURE_WAIT SENSOR="heater_generic Heater_Chamber" MINIMUM={s-1} MAXIMUM={s+1}
#        M117 Chamber at target temperature
#    {% endif %}

[gcode_macro PID_CHAMBER]
gcode:
      G28
      PID_CALIBRATE HEATER=Heater_Chamber TARGET=60
      M141 S60
      TURN_OFF_HEATERS
      SAVE_CONFIG
[gcode_macro _TOOLCHANGER_HOMING_START]
gcode:
  {% if printer["gcode_macro STATUS_HOMING"] is defined %}
    _STATUS_HOMING
  {% endif %}
  {% if printer["gcode_macro _KNOMI_STATUS"] is defined %}
    SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True
  {% endif %}


[gcode_macro _TOOLCHANGER_HOMING_END]
gcode:
  {% if printer["gcode_macro _KNOMI_STATUS"] is defined %}
    SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False
  {% endif %}
  {% if printer["gcode_macro STATUS_READY"] is defined %}
    _STATUS_READY
  {% endif %}


[gcode_macro CLEAR_PAUSE]
rename_existing: BASE_CLEAR_PAUSE
gcode:
  _TOOLCHANGER_CLEAR_PAUSE
  BASE_CLEAR_PAUSE


[gcode_macro _TOOLCHANGER_CLEAR_PAUSE]
gcode:
  SET_GCODE_VARIABLE MACRO=_TOOLCHANGER_CRASH_RESUME VARIABLE=active_tool VALUE=-1
  SET_GCODE_VARIABLE MACRO=_TOOLCHANGER_CRASH_RESUME VARIABLE=tool_temps VALUE=[]
  SET_GCODE_VARIABLE MACRO=_TOOLCHANGER_CRASH_PAUSE VARIABLE=crashed VALUE=0


[gcode_macro _TOOLCHANGER_CRASH_RESUME]
variable_active_tool: -1
variable_tool_temps: []
gcode:
  {% if printer.pause_resume.is_paused and printer["gcode_macro _TOOLCHANGER_CRASH_PAUSE"].crashed > 0 %}
    M117 crashed... resuming
    INITIALIZE_TOOLCHANGER
    {% if printer.tool_probe_endstop.active_tool_number != active_tool %}
      T{active_tool}
    {% endif %}
    M117 sequential reheating
    {% for tool_nr in printer.toolchanger.tool_numbers %}
      M109 T{tool_nr} S{tool_temps[tool_nr]}
    {% endfor %}
    _TOOLCHANGER_CLEAR_PAUSE
    M117 resuming print
  {% else %}
    M117 not crashed
  {% endif %}


[gcode_macro _TOOLCHANGER_CRASH_PAUSE]
# if you have a custom RESUME gcode add (this assumes the rename is BASE_RESUME)
#  {% if printer["gcode_macro _TOOLCHANGER_CRASH_PAUSE"].crashed > 0 %}
#    _TOOLCHANGER_CRASH_RESUME
#  {% else %}
#    <your current macro gcode>
#  {% endif %}
#  BASE_RESUME
variable_crashed: 0
gcode:
  {% if not printer.pause_resume.is_paused and crashed == 0 %}
    {% set temps = [] %}
    M117 crashed... pausing
    SET_GCODE_VARIABLE MACRO=_TOOLCHANGER_CRASH_PAUSE VARIABLE=crashed VALUE=1
    SET_GCODE_VARIABLE MACRO=_TOOLCHANGER_CRASH_RESUME VARIABLE=active_tool VALUE={printer.tool_probe_endstop.active_tool_number}
    {% for tool_nr in printer.toolchanger.tool_numbers %}
      {% set toolname = printer.toolchanger.tool_names[tool_nr] %}
      {% set extruder = printer[toolname].extruder %}
      {% set temp = printer[extruder].target|default(0.0)|float %}
      {% set temps = temps.append(temp) %}
      M104 T{tool_nr} S0
    {% endfor %}
    SET_GCODE_VARIABLE MACRO=_TOOLCHANGER_CRASH_RESUME VARIABLE=tool_temps VALUE='{temps}'
    M117 paused
  {% else %}
    M117 printer already paused
  {% endif %}


[gcode_macro _TOOLCHANGER_TOOL_BEFORE_CHANGE]
gcode:
  {% set tn = params.TN|string %}
  {% set tool = printer['tool ' + tn] %}
  {% if printer["gcode_macro STATUS_BUSY"] is defined %}
    _STATUS_BUSY T={tool.tool_number}
  {% endif %}
  #SET_TMC_CURRENT STEPPER=stepper_z CURRENT=2.0
  #SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=2.0
  #SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=2.0
  #SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=2.0
  _TOOL_BEFORE_CHANGE {rawparams}


[gcode_macro _TOOLCHANGER_TOOL_AFTER_CHANGE]
gcode:
  {% set tn = params.TN|string %}
  {% set tool = printer['tool ' + tn] %}
  #SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings['tmc5160 stepper_z'].run_current|float}
  #SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings['tmc5160 stepper_z1'].run_current|float}
  #SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings['tmc5160 stepper_z2'].run_current|float}
  #SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings['tmc5160 stepper_z3'].run_current|float}
  #G4 P500 ;M400 ??
  _TOOL_AFTER_CHANGE {rawparams}


[gcode_macro _TOOLCHANGER_TOOL_DROPOFF]
gcode:
  {% set tn = params.TN|string %}
  {% set tool = printer['tool ' + tn] %}
  ;SET_FILAMENT_SENSOR SENSOR=filament_sensor_T{tool.tool_number} ENABLE=0
  _TOOL_DROPOFF {rawparams}
  {% if printer["gcode_macro STATUS_READY"] is defined %}
    _STATUS_READY T={tool.tool_number}
  {% endif %}


[gcode_macro _TOOLCHANGER_TOOL_PICKUP]
gcode:
  {% set tn = params.TN|string %}
  {% set tool = printer['tool ' + tn] %}
  {% if printer["gcode_macro STATUS_HEATING"] is defined %}
    STATUS_HEATING T={tool.tool_number}
  {% endif %}
  ;SET_FILAMENT_SENSOR SENSOR=filament_sensor_T{tool.tool_number} ENABLE=1
  _TOOL_PICKUP {rawparams}
  ;_TOOLCHANGER_CLEAN_NOZZLE
  {% if printer["gcode_macro STATUS_PRINTING"] is defined %}
    _STATUS_PRINTING T={tool.tool_number}
  {% endif %}


[gcode_macro _TOOLCHANGER_DISABLE_FILAMENT_SENSORS]
gcode:
  {% set toolnames = printer.toolchanger.tool_names %}
  {% for toolname in toolnames %}
    SET_GCODE_VARIABLE MACRO={toolname[5:]} VARIABLE=active VALUE=0
  {% endfor %}


[gcode_macro _TOOLCHANGER_PRINT_START_START]
description: Important toolchanger print_start start calls
gcode:
  _TOOLCHANGER_DISABLE_EXTRUDER_STEPPERS
  BED_MESH_CLEAR
  # PRIME_LINES INITIAL_TOOL={params.TOOL}


[gcode_macro _TOOLCHANGER_PRINT_START_END]
description: Important toolchanger print_start end calls
gcode:
  #M117 Loading mesh...
  #BED_MESH_PROFILE LOAD=default #disabled by default, uncomment to load saved bed_mesh profile
  #M117 Loading skew...
  #SKEW_PROFILE LOAD=CaliFlower # disabled by default, uncomment to load saved skew profile


[gcode_macro _TOOLCHANGER_PRINT_END_START]
description: Important toolchanger print_end start calls
gcode:


[gcode_macro _TOOLCHANGER_PRINT_END_END]
description: Important toolchanger print_end end calls
gcode:
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float  - 10 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set cur_z = printer.toolhead.position.z|float %}
  {% if (cur_z + 15) <= max_z %}
    {% set safe_z = cur_z + 15 %}
  {% else %}
    {% set safe_z = max_z %}
  {% endif %}

  G1 X0 Y{max_y} Z{safe_z} F3000 ; bring nozzle left and bed forward

  BED_MESH_CLEAR
  _TOOLCHANGER_DISABLE_EXTRUDER_STEPPERS
